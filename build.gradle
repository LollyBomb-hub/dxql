plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'org.jetbrains.dokka' version '1.9.10'
}

group 'ru.council.libs'
version '2.3.4'
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://git-new.council.ru/api/v4/projects/34/packages/maven")
        name = "GitLab"
        credentials(HttpHeaderCredentials) {
            name = "Private-Token"
            value = System.getenv("LIBS_PACKAGES_READ_TOKEN")
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'

    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.apache.commons:commons-text:1.9'

    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'javax.activation:activation:1.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.0'

    implementation 'ru.council.libs:metan:1.3.16-f1'

    implementation 'org.springframework:spring-jdbc:5.3.20'
    implementation 'org.springframework:spring-expression:5.3.20'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'
    testImplementation 'org.postgresql:postgresql:42.3.4'

}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "https://git-new.council.ru/api/v4/projects/34/packages/maven"
            credentials(HttpHeaderCredentials) {
                name = "Private-Token"
                value = System.getenv("LIBS_PACKAGES_PUSH_TOKEN")
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

tasks.dokkaGfm.configure {
    doFirst {
        delete file("$rootDir/docs/dokka/gfm").listFiles()
    }
    outputDirectory.set(file("$rootDir/docs/dokka/gfm"))
}

tasks.dokkaHtml.configure {
    doFirst {
        delete file("$rootDir/docs/dokka/html").listFiles()
    }
    outputDirectory.set(file("$rootDir/docs/dokka/html"))
}


tasks.register("buildDocs") {
    dependsOn(dokkaGfm, dokkaHtml)
}

test {
    useJUnitPlatform()
}